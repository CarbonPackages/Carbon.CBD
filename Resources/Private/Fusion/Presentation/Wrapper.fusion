prototype(Carbon.SliderWrapper:Presentation.Wrapper) < prototype(Neos.Fusion:Component) {
    @propTypes {
        count = ${PropTypes.integer}
        editable = ${PropTypes.boolean}
        type = ${PropTypes.string}
        content = ${PropTypes.string}
        contentCollectionRenderer = ${PropTypes.string}
    }

    # Add here your Fusion Prototype
    type = null
    count = 0
    editable = false
    content = null
    contentCollectionRenderer = null

    @if {
        type = ${this.type}
        visible = ${this.editable || this.count}
    }
    l18n = Neos.Fusion:DataStructure {
        edit = ${Carbon.Backend.translate('edit', 'Edit', [], 'Main', 'Carbon.SliderWrapper')}
        live = ${Carbon.Backend.translate('live', 'Live view', [], 'Main', 'Carbon.SliderWrapper')}
        noSlides = ${Carbon.Backend.translate('noSlides', 'No slides have been created yet', [], 'Main', 'Carbon.SliderWrapper')}
    }

    renderer = afx`
        <div class={BEM.modifier('carbon-slider-wrapper', {edit: !props.count})} @if.set={props.editable}>
            <Neos.Fusion:Renderer type={props.type} element.content={props.content} element.count={props.count} />
            <div
                class='carbon-slider-wrapper__content'
                data-carbon-warning={props.l18n.noSlides}
                data-__neos-insertion-anchor
            >
                {props.contentCollectionRenderer}
            </div>
            <button type='button' class='carbon-slider-wrapper__switcher'>
                <span>{props.l18n.edit}</span>
                <span>{props.l18n.live}</span>
            </button>
            <style data-slipstream>
                {File.readFile('resource://Carbon.SliderWrapper/Private/Fusion/Presentation/Backend.css')}
            </style>
            <script data-slipstream='//body'>
                {File.readFile('resource://Carbon.SliderWrapper/Private/Fusion/Presentation/Backend.js')}
            </script>
        </div>
        <Neos.Fusion:Renderer type={props.type} element.content={props.content} element.count={props.count} @if.set={!props.editable} />
    `
}

